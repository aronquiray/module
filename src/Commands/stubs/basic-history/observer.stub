<?php

namespace DummyNameSpaceClass\Repositories\Backend\DummyPath\DummyClass;

use HalcyonLaravel\Base\Models\Model;
use HalcyonLaravel\Base\Repository\ObserverContract;
use History;

class DummyClassObserver extends ObserverContract
{
    public static function storing(array $data) :array
    {
        return $data;
    }

    public static function stored(Model $model, array $data) :Model
    {   
        $meta = $data['meta'];
        $model->metable()->create([
            'name' => $meta['name'] ?? $model->base('source'),
            'description' => $meta['description'],
            'keywords' => $meta['keywords'],
            'user_id' => auth()->user()->id
        ]);
        History::created($model);
        return $model;
    }

    public static function updating(Model $model, array $data) :Model
    {
        return $model;
    }

    public static function updated(Model $model, array $data, array $oldModel) :Model
    {
        $meta = $data['meta'];
        $model->metable()->update([
            'name' => $meta['name'] ?? $model->name,
            'description' => $meta['description'],
            'keywords' => $meta['keywords'],
            'user_id' => auth()->user()->id
        ]);

        History::updated($model, $oldModel);
        return $model;
    }

    public static function deleting(Model $model) :Model
    {
        $model->metable()->delete();
        return $model;
    }

    public static function deleted(Model $model) :Model
    {
        History::deleted($model);
        return $model;
    }

    public static function restoring(Model $model) :Model
    {
        return $model;
    }

    public static function restored(Model $model) :Model
    {
        return $model;
    }

    public static function purging(Model $model) :Model
    {
        return $model;
    }

    public static function purged(Model $model) :Model
    {
        return $model;
    }
}
