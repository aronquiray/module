<?php

namespace DummyNameSpaceClass\Repositories\DummyPath\DummyClass;

use HalcyonLaravel\Base\Repository\ObserverContract;
use History;

/**
 * Class DummyClassObserver
 *
 * @package DummyNameSpaceClass\Repositories\DummyPath\DummyClass
 */
class DummyClassObserver extends ObserverContract
{
    /**
     * @param array $data
     *
     * @return array
     */
    public static function storing(array $data): array
    {
        return $data;
    }

    /**
     * @param       $model
     * @param array $data
     *
     * @return mixed
     */
    public static function stored($model, array $data)
    {
        $meta = $data['meta'];
        $model->metaTag()->create([
            'title' => $meta['title'] ?? $model->base('source'),
            'description' => $meta['description'],
            'keywords' => $meta['keywords'],
        ]);
        History::created($model);
        return $model;
    }

    /**
     * @param       $model
     * @param array $data
     *
     * @return mixed
     */
    public static function updating($model, array $data)
    {
        return $model;
    }

    /**
     * @param       $model
     * @param array $data
     * @param array $oldModel
     *
     * @return mixed
     */
    public static function updated($model, array $data, array $oldModel)
    {
        $meta = $data['meta'];
        $model->metaTag()->update([
            'title' => $meta['title'] ?? $model->base('source'),
            'description' => $meta['description'],
            'keywords' => $meta['keywords'],
        ]);

        History::updated($model, $oldModel);
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function deleting($model)
    {
        $model->metaTag()->delete();
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function deleted($model)
    {
        History::deleted($model);
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function restoring($model)
    {
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function restored($model)
    {
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function purging($model)
    {
        return $model;
    }

    /**
     * @param $model
     *
     * @return mixed
     */
    public static function purged($model)
    {
        return $model;
    }
}
