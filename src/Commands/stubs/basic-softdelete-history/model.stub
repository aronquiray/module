<?php

namespace DummyNameSpaceClass\Models\DummyPath\DummyClass;

use DummyNameSpaceClass\Models\DummyPath\DummyClass\Traits\DummyClassAttributes;
use DummyNameSpaceClass\Models\DummyPath\DummyClass\Traits\DummyClassRegularFunctions;
use DummyNameSpaceClass\Models\DummyPath\DummyClass\Traits\DummyClassRelations;
use DummyNameSpaceClass\Models\DummyPath\DummyClass\Traits\DummyClassScopes;
use DummyNameSpaceClass\Models\DummyPath\DummyClass\Traits\DummyClassStaticFunctions;
use HalcyonLaravel\Base\Models\Model;
use HalcyonLaravel\Base\Models\Traits\ModelDefaultTraits;
use Illuminate\Database\Eloquent\SoftDeletes;
use Spatie\Sluggable\HasSlug;
use Spatie\Sluggable\SlugOptions;
use Fomvasss\LaravelMetaTags\Traits\Metatagable;

/**
 * Class DummyClass
 * @package DummyNameSpaceClass\Models\DummyPath\DummyClass
 */
class DummyClass extends Model
{
    use Metatagable;
    use HasSlug;
    use SoftDeletes;
    use ModelDefaultTraits;
    use DummyClassAttributes;
    use DummyClassRegularFunctions;
    use DummyClassRelations;
    use DummyClassScopes;
    use DummyClassStaticFunctions;

    public const MODULE_NAME = 'dummy class';
    public const VIEW_BACKEND_PATH = 'backend.dummyPath.dummyClass';
    public const VIEW_FRONTEND_PATH = 'frontend.dummyPath.dummyClass';
    public const ROUTE_ADMIN_PATH = 'admin.dummy-path.dummy-classes';
    public const ROUTE_FRONTEND_PATH = 'frontend.dummy-path.dummy-classes';
    /**
     * Declared Fillables
     */
    protected $fillable = [
        'title',
        'slug',
    ];

    /**
     * Return the permissions related to this model.
     *
     * @return array
     */
    public static function permissions(): array
    {
        return [
            // table
            'index' => self::MODULE_NAME . ' list',

            // resources
            'create' => self::MODULE_NAME . ' create',
            'edit' => self::MODULE_NAME . ' edit',
            'show' => self::MODULE_NAME . ' show',
            'destroy' => self::MODULE_NAME . ' destroy',

            // deletes         
            'deleted list' => self::MODULE_NAME . ' deleted list',
            'restore' => self::MODULE_NAME . ' restore',
            'purge' => self::MODULE_NAME . ' purge',

            // history         
            'history list' => self::MODULE_NAME . ' history list',
        ];
    }


    public function getRouteKeyName()
    {
        return 'slug';
    }

    /**
     * Return the baseable source for this model.
     *
     * @return array
     */
    public function baseable(): array
    {
        return [
            'source' => 'title'
        ];
    }


    /**
     * Get the options for generating the slug.
     */
    public function getSlugOptions(): SlugOptions
    {
        return SlugOptions::create()
            ->generateSlugsFrom('title')
            ->saveSlugsTo('slug')
            ->slugsShouldBeNoLongerThan(is_latest_mysql_version() ? '250' : '191');
    }

    /**
     * Return the links related to this model.
     *
     * @return array
     */
    public function links(): array
    {
        $links = [
            'frontend' => [
                'show' => [
                    'type' => 'show',
                    'url' => route(self::ROUTE_FRONTEND_PATH . '.show', $this)
                ]
            ],
            'backend' => [
                'index' => [
                    'type' => 'custom',
                    'label' => 'Dummy Classes',
                    'permission' => self::permission('index'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.index')
                ],
                'show' => [
                    'type' => 'show',
                    'permission' => self::permission('show'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.show', $this)
                ],
                'edit' => [
                    'type' => 'edit',
                    'permission' => self::permission('edit'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.edit', $this)
                ],
                'destroy' => [
                    'type' => 'destroy',
                    'permission' => self::permission('destroy'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.destroy', $this),
                    'group' => 'more',
                    'redirect' => route(self::ROUTE_ADMIN_PATH . '.index')
                ],
                'restore' => [
                    'type' => 'restore',
                    'perminssion' => self::permission('restore'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.restore', $this),
                    // 'group' => 'more',
                    'redirect' => route(self::ROUTE_ADMIN_PATH . '.index')
                ],
                'purge' => [
                    'type' => 'purge',
                    'perminssion' => self::permission('purge'),
                    'url' => route(self::ROUTE_ADMIN_PATH . '.purge', $this),
                    // 'group' => 'more',
                    'redirect' => route(self::ROUTE_ADMIN_PATH . '.index')
                ],
            ]
        ];
        return $links;
    }
}
