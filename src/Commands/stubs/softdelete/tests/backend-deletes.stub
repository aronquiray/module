<?php

namespace Tests\Feature\Modules\Backend\DummyPath\DummyClass;

use DummyNameSpaceClass\Models\DummyPath\DummyClass\DummyClass;
use Tests\TestCase;

/**
 * Class DummyClassBreadFeatureDeletesBackendTest
 * @package Tests\Feature\Modules\Backend\DummyPath\DummyClass
 */
class DummyClassBreadFeatureDeletesBackendTest extends TestCase
{

    public function setUp()
    {
        parent::setUp();
        $this->markTestSkipped();
        $this->loginAsSystem();
    }

    /**
     * @test
     */
    public function dummyClassDeletedRouteExist()
    {
        $this->get(route(DummyClass::ROUTE_ADMIN_PATH . '.deleted'))
            ->assertStatus(200);
    }

    /**
     * @test
     */
    public function dummyClassDestroy()
    {
        $model = DummyClass::create([
            'title' => 'Salliess',
        ]);

        $response = $this->delete(route(DummyClass::ROUTE_ADMIN_PATH . '.destroy', $model));

        $response
            ->assertStatus(302)
            ->assertSessionHas('flash_success', 'Salliess has been deleted.')
            ->assertRedirect(route(DummyClass::ROUTE_ADMIN_PATH . '.deleted'));

        $this->assertDatabaseHas((new DummyClass)->getTable(), [
            'id' => $model->id,
        ]);

        $this->assertDatabaseMissing((new DummyClass)->getTable(), [
            'id' => $model->id,
            'deleted_at' => null,
        ]);

    }

    /**
     * @test
     */
    public function dummyClassRestore()
    {
        $model = new DummyClass;
        $model->title = 'Salliess';
        $model->deleted_at = now();
        $model->save();

        $response = $this->patch(route(DummyClass::ROUTE_ADMIN_PATH . '.restore', $model));

        $response
            ->assertStatus(302)
            ->assertSessionHas('flash_success', 'Salliess has been restored.')
            ->assertRedirect(route(DummyClass::ROUTE_ADMIN_PATH . '.index'));

        $this->assertDatabaseHas((new DummyClass)->getTable(), [
            'id' => $model->id,
            'deleted_at' => null,
        ]);
    }

    /**
     * @test
     */
    public function dummyClassPurge()
    {
        $model = new DummyClass;
        $model->title = 'Salliess';
        $model->deleted_at = now();
        $model->save();

        $response = $this->delete(route(DummyClass::ROUTE_ADMIN_PATH . '.purge', $model));

        $response
            ->assertStatus(302)
            ->assertSessionHas('flash_success', 'Salliess has been permanently deleted.')
            ->assertRedirect(route(DummyClass::ROUTE_ADMIN_PATH . '.deleted'));

        $this->assertDatabaseMissing((new DummyClass)->getTable(), [
            'id' => $model->id,
        ]);
    }
}
