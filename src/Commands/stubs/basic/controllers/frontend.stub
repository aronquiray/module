<?php

namespace DummyNameSpaceClass\Http\Controllers\Frontend\DummyPath\DummyClass;

use DummyNameSpaceClass\Models\Core\Page\Page;
use DummyNameSpaceClass\Models\DummyPath\DummyClass\DummyClass as Model;
use DummyNameSpaceClass\Repositories\Backend\DummyPath\DummyClass as Repo;
use HalcyonLaravel\Base\Controllers\BaseController as Controller;

/**
 * Class DummyClassesController.
 */
class DummyClassesController extends Controller
{
    private $_page;

    private $_repo;

    /**
     * DummyClassesController constructor.
     *
     * @param \DummyNameSpaceClass\Models\DummyPath\DummyClass\DummyClass $model
     * @param \DummyNameSpaceClass\Repositories\Backend\DummyPath\DummyClass $repo
     */
    public function __construct(Model $model, Repo $repo)
    {
        $this->model = $model;
        $this->viewFrontendPath = $this->model::VIEW_FRONTEND_PATH;
        $this->_repo = $repo;

        // ignore when running console to prevent 404
        if (! app()->runningInConsole()) {
            $this->_page = Page::where('type', $this->model::MODULE_NAME)->where('status', 'enable')->with([
                'images',
                'menuable',
                'metable',
            ])->firstOrFail();
        }
    }

    public function index()
    {
        $page = $this->_page;
        $Model = new Model;
        $page = Page::where('type', $this->model::MODULE_NAME)->where('status', 'enable')->with([
            'images',
            'menuable',
            'metable',
        ])->firstOrFail();

        $models = $this->_repo->paginate(12);

        return view("$this->viewFrontendPath.index", compact('page', 'models', 'Model'));
    }

    /**
     * Returns the view of the page if existing and is enabled
     *
     * @param string $routeKeyName
     * @return View
     */
    public function show(string $routeKeyName)
    {
        $page = $model = $this->getModel($routeKeyName, false);

        return view($this->viewFrontendPath.'.show', compact('model', 'page'));
    }
}
